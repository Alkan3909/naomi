// Licensed under the Apache License, Version 2.0 (the “License”); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

* {
  background: $blue-grey-900;
  foreground: $blue-grey-200;
  gutterForeground: $blue-grey-400;

  caret: $blue-grey-200;
  lineHighlight: $blue-grey-800;
  selection: $blue-grey-800;

  bracketsForeground: $pink-A100;
  bracketsOptions: foreground;

  findHighlight: $teal-300;
  findHighlightForeground: $teal-800;

  guide: $blue-grey-800;
  activeGuide: $blue-grey-600;
  stackGuide: $blue-grey-800;
}

/**
 * Generic keywords.
 */

.keyword {
  foreground: $pink-A100;

  &.operator {
    fontStyle: bold;
  }
}

.storage.modifier,
.storage.type {
  .keyword {
    foreground: $deep-purple-200;
    fontStyle: italic bold;
  }
}

.keyword.operator.other.embedded-expression {
  foreground: rgba($pink-400, .7);
}

/**
 * Generic delimiters.
 */

.punctuation.delimiter {
  foreground: $amber-100;
  fontStyle: bold;
}

.punctuation.delimiter.expression.group.b {
  foreground: $brown-200;
}

/**
 * Control statement delimiter.
 */

.punctuation.delimiter.control {
  foreground: $pink-A100;
}

/**
 * Ambiguous identifiers.
 */

.entity.name.ambiguous {
  foreground: $amber-100;
}

/**
 * Generic aliases.
 */

.entity.name.alias {
  foreground: $amber-100;
}

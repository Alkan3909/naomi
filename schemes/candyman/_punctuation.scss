// Licensed under the Apache License, Version 2.0 (the “License”); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

.punctuation {
  &.accessor,
  &.comma,
  &.terminator {
    foreground: $green-a200;
    fontStyle: bold;
  }

  &.definition.template-expression {
    foreground: $red-300;
  }

//   &.separator.comma,
//   &.section.group {
//     foreground: $amber-200;
//     fontStyle: none;
//   }
}

// .meta.generic {
//   .punctuation.separator.comma,
//   .punctuation.definition.generic {
//     foreground: $brown-300;
//   }
// }

// .meta.template.

// @for $i from 1 through 7 {
//   #{repeatString('meta.annotation .meta.group', $i)}
//   .meta.group,
//   #{repeatString('meta.conditional .meta.group', $i)}
//   .meta.group,
//   #{repeatString('meta.function.parameters meta.group', $i)}
//   .meta.group,
//   #{repeatString('meta.function-call meta.group', $i)}
//   .meta.group {
//     .punctuation {
//       &.section.group,
//       &.separator.comma {
//         foreground: $amber-200;
//         fontStyle: none;
//       }
//     }
//   }
// }

// Groups inside function calls.
// @for $i from 1 through 100 {
//   .animation#{$i} {
//     animation-delay: random(100) * 0.1 + s !important;
//     animation-duration: max(random(20), 10) + s;
//     animation-iteration-count: infinite;
//     animation-name: pulsatingBlock;
//   }
// }


// .meta.function-call
// .meta.group
// .meta.group,

// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.group,

// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.group,

// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.group,

// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.function-call
// .meta.group
// .meta.group {
//   .punctuation {
//     &.separator.comma {
//       foreground: $green-a200;
//     }
//     &.section.group {
//       foreground: $amber-100;
//     }
//   }
// }


// .meta.conditional {
//   .meta.block
//   .punctuation.section.block {
//     foreground: $green-200;
//   }

//   .meta.group {
//     .punctuation {
//       &.separator.comma,
//       &.section.group {
//         foreground: $green-200;
//       }
//     }
//   }
// }

// .punctuation.other.property.access {
//   foreground: $light-green-300;
// }

// .punctuation.definition.block,
// .punctuation.definition.control {
//   foreground: $pink-a100;
// }

// .punctuation.definition.extend-list.separator,
// .punctuation.definition.implement-list.separator {
//   foreground: $purple-200;
// }

%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [_[:alpha:]]
    [_[:alnum:]]*

contexts:
  main:
    # End.
    - match: \s*(;)
      captures:
        1: punctuation.delimiter.function.declaration.end.mql.mql4
      pop: true
    # Pure virtual or const.
    - match: |
        (?x)\s*
        (?> (const)\s*
          |
          (
            =\s*
            (?> 0
              | NULL
            )\s*
          )?
        )
      captures:
        1: >-
          storage.modifier.const.mql.mql4
          keyword.modifier.const.mql.mql4
        2: >-
          storage.modifier.pure-virtual.mql.mql4
          keyword.modifier.pure-virtual.mql.mql4
    # Initialization.
    - match: \s*(:)
      captures:
        1: keyword.other.mql.mql4
      set: initializations
    # Normal body.
    - include: body-start

  initializations:
    - match: ""
      set: [
        delimiter,
        end-initialization,
        initialization-expression,
        begin-initialization,
        initialized-identifier
      ]

  initialized-identifier:
    - match: |
        (?xi)\s*
        ({{commonIdentifier}})
      captures:
        1: entity.name.ambiguous.mql.mql4
      pop: true

  begin-initialization:
    - match: \s*(\()
      captures:
        1: punctuation.delimiter.initialization.begin.mql.mql4
      pop: true

  initialization-expression:
    - match: (?=\s*\))
      pop: true
    - match: \s*(,)
      captures:
        1: punctuation.delimiter.initialization.mql.mql4
    - match: ""
      push: statement-and-expression

  end-initialization:
    - match: \s*(\))
      captures:
        1: punctuation.delimiter.initialization.end.mql.mql4
      pop: true

  delimiter:
    - include: body-start
    - match: \s*(,)
      captures:
        1: punctuation.delimiter.initialization.mql.mql4
      set: initializations

  body-start:
    - match: \s*(\{)
      captures:
        1: punctuation.delimiter.function.body.begin.mql.mql4
      set: body-content

  body-content:
    - match: \s*(})
      captures:
        1: punctuation.delimiter.function.body.end.mql.mql4
      pop: true
    - match: ""
      push: statement-and-expression

  statement-and-expression:
    - include: Packages/Naomi/syntaxes/mql4/statement-and-expression.sublime-syntax

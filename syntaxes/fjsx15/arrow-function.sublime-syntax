%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

contexts:
  main:
    # Template arrow function assigned to declared variable/constant.
    - match: |
        (?xi)\s*
        ((?> const
          | let
          | var
        ))
        \s*({{commonIdentifier}})
        \s*(=)
        \s*(async)?
        (?=
          \s*<.*>
          \s*\(.*\)
          (?:
            \s*:.*?
          )?
          \s*=>
        )
      captures:
        1: >-
          storage.type.js.fjsx15
          keyword.declaration.variable.js.fjsx15
        2: entity.name.function.js.fjsx15
        3: keyword.operator.other.assignment.js.fjsx15
        4: keyword.modifier.js.fjsx15
      set: [
        body,
        parameters,
        template-parameters
      ]
    # Arrow function assigned to declared variable/constant.
    - match: |
        (?xi)\s*
        ((?> const
          | let
          | var
        ))
        \s*({{commonIdentifier}})
        \s*(=)
        \s*(async)?
        (?=
          \s*\(.*\)
          (?:
            \s*:.*?
          )?
          \s*=>
        )
      captures:
        1: >-
          storage.type.js.fjsx15
          keyword.declaration.variable.js.fjsx15
        2: entity.name.function.js.fjsx15
        3: keyword.operator.other.assignment.js.fjsx15
        4: keyword.modifier.js.fjsx15
      set: [
        body,
        parameters
      ]
    # Template arrow function.
    - match: |
        (?x)
        \s*(async)?
        (?=
          \s*<.*>
          \s*\(.*\)
          (?:
            \s*:.*?
          )?
          \s*=>
        )
      captures:
        1: keyword.modifier.js.fjsx15
      set: [
        body,
        parameters,
        template-parameters
      ]
    # Normal arrow function.
    - match: |
        (?x)
        \s*(async)?
        (?=
          \s*\(.*\)
          (?:
            \s*:.*?
          )?
          \s*=>
        )
      captures:
        1: keyword.modifier.js.fjsx15
      set: [
        body,
        parameters
      ]
    # Single parameter assigned to variable.
    - match: |
        (?x)
        (?xi)\s*
        ((?> const
          | let
          | var
        ))
        \s*({{commonIdentifier}})
        \s*(=)
        \s*(async)?
        (?=
          \s*{{commonIdentifier}}
          (?:
            \s*:.*?
          )?
          \s*=>
        )
      captures:
        1: >-
          storage.type.js.fjsx15
          keyword.declaration.variable.js.fjsx15
        2: entity.name.function.js.fjsx15
        3: keyword.operator.other.assignment.js.fjsx15
        4: keyword.modifier.js.fjsx15
      set: [
        body,
        single-parameter
      ]
    # Single parameter.
    - match: |
        (?x)
        \s*(async)?
        (?=
          \s*{{commonIdentifier}}
          (?:
            \s*:.*?
          )?
          \s*=>
        )
      captures:
        1: keyword.modifier.js.fjsx15
      set: [
        body,
        single-parameter
      ]

  single-parameter:
    - match: (?=\s*=>)
      pop: true
    - match: ""
      push:
        - include: Packages/Naomi/syntaxes/fjsx15/flowtype/associated-type.sublime-syntax
        # Parameter.
        - match: |
            (?xi)
            ({{commonIdentifier}})(\?)?
          captures:
            0: function.parameter.js.fjsx15
            1: entity.name.variable.js.fjsx15
            2: keyword.operator.other.optional.flowtype
          pop: true

  template-parameters:
    - include: Packages/Naomi/syntaxes/fjsx15/flowtype/template/parameters.sublime-syntax

  parameters:
    - include: Packages/Naomi/syntaxes/fjsx15/function/parameters.sublime-syntax

  body:
    - include: Packages/Naomi/syntaxes/fjsx15/arrow-function/body.sublime-syntax

%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

contexts:
  main:
    - match: \s*(class)\b
      captures:
        1: >-
          storage.type.js.fjsx15
          keyword.declaration.class.js.fjsx15
      set: declaration

  declaration:
    - include: comment
    # Body.
    - match: (?=\s*\{)
      set: body
    # Template parameters.
    - match: (?=\s*<)
      push: template-parameters
    # Interfaces.
    - match: \s*(implements)\b
      captures:
        1: >-
          storage.modifier.js.fjsx15
          keyword.other.implement.js.fjsx15
      push: [
        optional-target-class-or-namespace,
        optional-template-arguments,
        target-class-or-namespace
      ]
    # Extensions.
    - match: \s*(extends)\b
      captures:
        1: >-
          storage.modifier.js.fjsx15
          keyword.other.inherit.js.fjsx15
      push: [
        optional-template-arguments,
        target-class-or-namespace
      ]
    # Identifier.
    - match: |
        (?xi)
        \s*({{commonIdentifier}})
      captures:
        1: entity.name.class.js.fjsx15

  comment:
    - include: Packages/Naomi/syntaxes/fjsx15/comment.no-pop.sublime-syntax

  template-parameters:
    - include: Packages/Naomi/syntaxes/fjsx15/flowtype/template/parameters.sublime-syntax

  type:
    - include: Packages/Naomi/syntaxes/fjsx15/flowtype/type.sublime-syntax

  body:
    - include: Packages/Naomi/syntaxes/fjsx15/class/body.sublime-syntax

  optional-template-arguments:
    - include: Packages/Naomi/syntaxes/fjsx15/flowtype/template/arguments.sublime-syntax
    - match: ""
      pop: true

  optional-target-class-or-namespace:
    - match: \s*(\,)
      scope: punctuation.definition.implement-list.separator.js.fjsx15
      set: [
        optional-target-class-or-namespace,
        optional-template-arguments,
        target-class-or-namespace
      ]
    - match: (?=\s*\{)
      pop: true

  target-class-or-namespace:
    - include: Packages/Naomi/syntaxes/fjsx15/flowtype/namespace-path.no-pop.sublime-syntax
    - match: |
        (?xi)
        \s*({{commonIdentifier}})
      captures:
        1: >-
          parent.js.fjsx15
          entity.name.class.js.fjsx15
      pop: true

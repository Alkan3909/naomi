%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*
  expressionGroupBegin: \s*(\()
  expressionBegin: (?=\s*\S)

contexts:
  main:
    - include: comment-no-pop
    # Open new expression group.
    - match: "{{expressionGroupBegin}}"
      captures:
        1: punctuation.definition.expression.group.a.begin.js.fjsx15
      push: open-b-close-a
    # Start of the expression.
    - match: "{{expressionBegin}}"
      set: [ optional-tail, head ]

  comment-no-pop:
    - include: Packages/Naomi/syntaxes/fjsx15/comment.no-pop.sublime-syntax

  open-a-close-b:
    - include: comment-no-pop
    # Open new expression group.
    - match: "{{expressionGroupBegin}}"
      captures:
        1: punctuation.definition.expression.group.a.begin.js.fjsx15
      push: open-b-close-a
    # Close the previous expression group.
    - match: \s*(\))
      captures:
        1: punctuation.definition.expression.group.b.end.js.fjsx15
      set: optional-tail
    # Start of the expression.
    - match: "{{expressionBegin}}"
      set: [ optional-tail, head ]

  open-b-close-a:
    - include: comment-no-pop
    # Open new expression group.
    - match: "{{expressionGroupBegin}}"
      captures:
        1: punctuation.definition.expression.group.b.begin.js.fjsx15
      push: open-a-close-b
    # Close the previous expression group.
    - match: \s*(\))
      captures:
        1: punctuation.definition.expression.group.a.end.js.fjsx15
      set: optional-tail
    # Start of the expression.
    - match: "{{expressionBegin}}"
      set: [ optional-tail, head ]

  head:
    - include: comment-no-pop
    - include: Packages/Naomi/syntaxes/fjsx15/literal.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/class.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/function.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/function-call.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/constant.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/variable.sublime-syntax

  optional-tail:
    - include: comment-no-pop
    # Property access, function call and type conversion.
    - match: (?=\s*[\[(:])
      set: [ optional-tail, tail ]
    # Other operators. At this point, operators will have a higher priority than
    # regex literals.
    - include: Packages/Naomi/syntaxes/fjsx15/operator.sublime-syntax
    # Anything else not expected.
    - match: (?=\s*\S)
      pop: true

  tail:
    - include: comment-no-pop
    - include: Packages/Naomi/syntaxes/fjsx15/flowtype/associated-type.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/property-access.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/function-call/arguments.sublime-syntax

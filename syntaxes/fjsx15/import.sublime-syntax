%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

contexts:
  main:
    # Import the entire module.
    - match: |
        (?x)\s*
        (import)
        (?=
          \s*
          (?>"|')
        )\b
      captures:
        1: keyword.control.import.js.fjsx15
      set: origin-path
    # Type.
    - match: |
        (?x)
        \s*(import)
        \s*(type)\b
      captures:
        1: keyword.control.import.js.fjsx15
        2: >-
          storage.type.flowtype
          keyword.other.type-aliasing.flowtype
      set: target-types
    # Other.
    - match: |
        (?x)
        \s*(import)\b
        (?!\.)
      captures:
        1: keyword.control.import.js.fjsx15
      set: targets

  comment:
    - include: Packages/Naomi/syntaxes/fjsx15/comment.no-pop.sublime-syntax

  origin:
    - match: \s*(from)\b
      captures:
        1: keyword.control.import.origin.js.fjsx15
      set: origin-path

  origin-path:
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/double-quoted.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/single-quoted.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/template.sublime-syntax

  punctuation:
    - match: \s*(\{)
      captures:
        1: punctuation.delimiter.import.list.begin.js.fjsx15
    - match: \s*(})
      captures:
        1: punctuation.delimiter.import.list.end.js.fjsx15
    - match: \s*(,)
      captures:
        1: punctuation.delimiter.import.item.js.fjsx15

  targets:
    - include: comment
    - include: origin
    - include: punctuation
    # All.
    - match: \s*(\*)
      captures:
        1: keyword.operator.other.import.all.js.fjsx15
      push: optional-alias
    # Simple.
    - match: |
        (?xi)\s*
        ({{commonIdentifier}})
      captures:
        1: >-
          import.js.fjsx15
          entity.name.ambiguous.js.fjsx15
      push: optional-alias

  optional-alias:
    - match: |
        (?x)
        (?=\s*
          (?> ,
            | }
            | from
          )
        )
      pop: true
    - include: alias

  alias:
    - match: \s*(as)\b
      captures:
        1: keyword.other.alias.js.fjsx15
      set: alias-name

  alias-name:
    - match: |
        (?xi)\s*
        ({{commonIdentifier}})
      captures:
        1: entity.name.alias.js.fjsx15
      pop: true

  target-types:
    - include: comment
    - include: origin
    - include: punctuation
    # All.
    - match: \s*(\*)
      captures:
        1: keyword.operator.other.import.all.js.fjsx15
      push: optional-type-alias
    # Aliased.
    - match: |
        (?xi)\s*
        ({{commonIdentifier}})
        (?=\s+as)
      captures:
        1: >-
          import.js.fjsx15
          entity.name.aliased.flowtype
      push: type-alias
    # Other.
    - match: |
        (?xi)\s*
        ({{commonIdentifier}})
      captures:
        1: >-
          import.js.fjsx15
          entity.name.type.flowtype

  optional-type-alias:
    - match: |
        (?x)
        (?=\s*
          (?> ,
            | }
            | from
          )
        )
      pop: true
    - include: type-alias

  type-alias:
    - match: \s*(as)\b
      captures:
        1: keyword.other.alias.js.fjsx15
      set: type-alias-name

  type-alias-name:
    - match: |
        (?xi)\s*
        ({{commonIdentifier}})
      captures:
        1: entity.name.type.flowtype
      pop: true

%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

contexts:
  main:
    # Type.
    - match: |
        (?x)
        \s*(import)
        \s*(type)\b
      captures:
        1: keyword.control.import.js.fjsx15
        2: keyword.other.type-aliasing.flowtype
      set: target
    # Import the entire module.
    - match: |
        (?x)\s*
        (import)
        (?=
          \s*
          (?>"|')
        )\b
      captures:
        1: keyword.control.import.js.fjsx15
      set: origin-path
    # Selective.
    - match: \s*(import)\b
      captures:
        1: keyword.control.import.js.fjsx15
      set: target

  comment-no-pop:
    - match: |
        (?x)
        (?=\s*/
          (?> \*
            | /
          )
        )
      push:
        - include: Packages/Naomi/syntaxes/fjsx15/comment.sublime-syntax

  origin:
    - match: \s*(from)\b
      captures:
        1: keyword.control.import.origin.js.fjsx15
      set: origin-path

  origin-path:
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/double-quoted.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/single-quoted.sublime-syntax

  target:
    - include: comment-no-pop
    # Multiple.
    - match: \s*({)
      captures:
        1: punctuation.delimiter.import.list.begin.js.fjsx15
      set: [
        punctuation,
        list
      ]
    # All.
    - match: \s*(\*)
      captures:
        1: keyword.operator.other.import.all.js.fjsx15
      set: [
        punctuation,
        optional-alias
      ]
    # Simple.
    - match: |
        (?xi)\s*
        ({{commonIdentifier}})
      captures:
        1: >-
          import.js.fjsx15
          entity.name.ambiguous.js.fjsx15
      set: [
        punctuation,
        optional-alias
      ]

  list:
    - match: \s*(})
      captures:
        1: punctuation.delimiter.import.list.end.js.fjsx15
      pop: true
    - match: ""
      push:
        - match: \s*(,)
          captures:
            1: punctuation.delimiter.import.item.js.fjsx15
        - match: (?=\s*})
          pop: true
        - include: target

  optional-alias:
    - match: |
        (?x)
        (?=\s*
          (?> ,
            | \}
            | from
          )
        )
      pop: true
    - include: alias

  alias:
    - match: \s*(as)\b
      captures:
        1: keyword.other.alias.js.fjsx15
      set: alias-name

  alias-name:
    - match: |
        (?xi)\s*
        ({{commonIdentifier}})
      captures:
        1: entity.name.alias.js.fjsx15
      pop: true

  punctuation:
    - include: origin
    - match: \s*(,)
      captures:
        1: punctuation.delimiter.import.item.js.fjsx15
      set: [
        punctuation,
        target
      ]
    - match: ""
      pop: true

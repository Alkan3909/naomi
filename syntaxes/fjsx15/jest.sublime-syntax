%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

contexts:
  main:
    # jest.
    - match: |
        (?x)
        (?<!\.)
        \s*(jest)
        \s*(\.)
      captures:
        1: support.type.object.jest.js.fjsx15
        2: punctuation.accessor.js.fjsx15
      set: jest-property-or-function
    # afterAll/Each, beforeAll/Each, describe, it, test.
    - match: |
        (?x)
        (?<!\.)\s*
        ((?> after(?>All|Each)
          | before(?>All|Each)
          | describe
          | it
          | test
        ))
      captures:
        1: support.function.jest.fn.js.fjsx15
      set: [
        meta-scope,
        arguments,
        optional-skip-only
      ]
    # expect
    - match: (?<!\.)\s*(expect)
      captures:
        1: support.function.jest.fn.js.fjsx15
      set: [
        expect-chain,
        meta-scope,
        arguments
      ]

  escape:
    - match: (?=\s*\S)
      pop: true

  pop-now:
    - match: ""
      pop: true

  accessor-no-pop:
    - match: \s*(\.)
      captures:
        1: punctuation.accessor.js.fjsx15

  arguments:
    - include: Packages/Naomi/syntaxes/fjsx15/function-call/arguments.sublime-syntax

  optional-skip-only:
    - include: accessor-no-pop
    # only
    - match: \s*(only)\b
      captures:
        1: support.function.jest.only.js.fjsx15
      pop: true
    # skip
    - match: \s*(skip)\b
      captures:
        1: support.function.jest.skip.js.fjsx15
      pop: true
    # Anything else.
    - include: escape

  jest-property-or-function:
    - match: \s*(fn)(?=\s*\()
      captures:
        1: support.function.jest.fn.js.fjsx15
      set: [
        meta-scope,
        arguments
      ]

  meta-scope:
    - meta_scope: meta.function-call.jest.js.fjsx15
    - include: pop-now

  matcher-meta-scope:
    - meta_scope: meta.function-call.jest.matcher.js.fjsx15
    - include: pop-now

  expect-chain:
    - include: accessor-no-pop
    # Not.
    - match: \s*(not)\b
      captures:
        1: support.type.object.jest.matcher.not.js.fjsx15
    # Matchers.
    - match: |
        (?x)\s*
        (to
          (?> Be
              (?> Called
                | CloseTo
                | Defined
                | Falsy
                | GreaterThan
                | GreaterThanOrEqual
                | InstanceOf
                | LessThan
                | LessThanOrEqual
                | Null
                | Truthy
                | Undefined
              )?
            | Contain(?:Equal)?
            | Equal
            | HaveBeen
              (?> Called(?>Times|With)?
                | LastCalledWith
              )
            | Have(?>Length|Property)
            | Match(?:Object|Snapshot)?
            | Throw(?:Error(?:MatchingSnapshot)?)?
          )
        )\b
        (?=\s*\()
      captures:
        1: support.function.jest.matcher.fjsx15
      set: [
        matcher-meta-scope,
        arguments
      ]

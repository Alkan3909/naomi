%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

contexts:
  main:
    # - include: array-functions
    - include: console
    - include: console-functions
    - include: console-function-calls
    # - include: math-constants
    # - include: math-functions
    # - include: object-functions
    # - include: symbol-functions
    # - include: symbol-properties
    # https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects
    - include: constants
    # - include: variables
    # - include: functions
    # - include: import-properties
    # - include: fundamental-objects
    # - include: numbers-and-dates
    # - include: text-processing
    # - include: indexed-collections
    # - include: keyed-collections
    # - include: structured-data
    # - include: control-abstraction-objects
    # - include: reflection
    # - include: internationalization
    # - include: web-assembly

  escape:
    - match: (?=\s*\S)
      pop: true

  pop-now:
    - match: ""
      pop: true

  arguments:
    - include: Packages/Naomi/syntaxes/fjsx15/function-call/arguments.sublime-syntax

  console:
    - match: |
        (?x)
        \s*(console)
        \s*(\.)
      captures:
        1: support.type.object.console.js.fjsx15
        2: punctuation.accessor.js.fjsx15
      set: console-property-or-function

  console-property-or-function:
    # error
    - match: \s*(error)(?=\s*\()
      captures:
        1: support.function.console.error.js.fjsx15
      set: [
        console-error-meta-scope,
        arguments
      ]
    - match: \s*(error)
      captures:
        1: support.function.console.error.js.fjsx15
      pop: true
    # info
    - match: \s*(info)(?=\s*\()
      captures:
        1: support.function.console.info.js.fjsx15
      set: [
        console-info-meta-scope,
        arguments
      ]
    - match: \s*(info)
      captures:
        1: support.function.console.info.js.fjsx15
      pop: true
    # log
    - match: \s*(log)(?=\s*\()
      captures:
        1: support.function.console.log.js.fjsx15
      set: [
        console-log-meta-scope,
        arguments
      ]
    - match: \s*(log)
      captures:
        1: support.function.console.log.js.fjsx15
      pop: true
    # warn
    - match: \s*(warn)(?=\s*\()
      captures:
        1: support.function.console.warn.js.fjsx15
      set: [
        console-warn-meta-scope,
        arguments
      ]
    - match: \s*(warn)
      captures:
        1: support.function.console.warn.js.fjsx15
      pop: true
    # Anything else.
    - include: escape

  console-error-meta-scope:
    - meta_scope: meta.function-call.console.error.js.fjsx15
    - include: pop-now

  console-info-meta-scope:
    - meta_scope: meta.function-call.console.info.js.fjsx15
    - include: pop-now

  console-log-meta-scope:
    - meta_scope: meta.function-call.console.log.js.fjsx15
    - include: pop-now

  console-warn-meta-scope:
    - meta_scope: meta.function-call.console.warn.js.fjsx15
    - include: pop-now

  constants:
      - match: |
          (?x)\s*
          (?> (false)
            | (Infinity)
            | (NaN)
            | (null)
            | (true)
            | (undefined)
          )
        captures:
          1: constant.language.boolean.false.js.fjsx15
          2: constant.language.infinity.js.fjsx15
          3: constant.language.nan.js.fjsx15
          4: constant.language.null.js.fjsx15
          5: constant.language.boolean.true.js.fjsx15
          6: constant.language.undefined.js.fjsx15
        pop: true

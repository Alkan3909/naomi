%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

  indexer: |
    (\[
      [^\[\]]*
      \g<-1>?
      [^\[\]]*
    \])

  methodIdentifier: |
    (?> '.*?(?<!\\)'
      | ".*?(?<!\\)"
      | `.*?(?<!\\)`
      | {{indexer}}
      | {{commonIdentifier}}
    )

  templateParameters: |
    (<
      [^<>]*
      \g<-1>?
      [^<>]*
    >)

contexts:
  main:
    # Method without identifier.
    - match:  (?=\s*\()
      set: declaration
    # Normal method.
    - match: |
        (?xi)
        (?=
          \s*{{methodIdentifier}}
          \s*{{templateParameters}}?
          \s*\(
        )
      set: declaration

  declaration:
    - meta_scope: >-
        meta.declaration.function.method.js.fjsx15
        meta.function.js.fjsx15
    - include: comment-no-pop
    # Body.
    - match: (?=\s*\{)
      set: body
    # Template parameters.
    - match: (?=\s*<)
      push: template-parameters
    # Parameters.
    - match: (?=\s*\()
      push: parameters
    # Support identifier.
    - match: |
        (?x)
        \s*(constructor)\b
      captures:
        1: entity.name.function.constructor.js.fjsx15
      set: [
        optional-support-body,
        support-parameters
      ]
    # React JS’s support methods.
    - include: Packages/Naomi/syntaxes/fjsx15/class/support/react-js-method.sublime-syntax
    # Identifier.
    - match: |
        (?xi)
        \s*({{commonIdentifier}})
      captures:
        1: entity.name.function.js.fjsx15
    # Computed identifier.
    - match: |
        (?x)
        \s*(\[)
      captures:
        1: punctuation.definition.function.identifier.begin.js.fjsx15
      push: [ computed-identifier-end, optional-expression ]
    # String identifiers
    - match: (?=\s*(?>'|"|`))
      push:
        - include: Packages/Naomi/syntaxes/fjsx15/literal/string/double-quoted.sublime-syntax
        - include: Packages/Naomi/syntaxes/fjsx15/literal/string/single-quoted.sublime-syntax
        - include: Packages/Naomi/syntaxes/fjsx15/literal/string/template.sublime-syntax
    # None of the expected items matched, it probably ended.
    - match: (?=\s*\S)
      pop: true

  template-parameters:
    - include: Packages/Naomi/syntaxes/fjsx15/flowtype/template/parameters.sublime-syntax

  parameters:
    - include: Packages/Naomi/syntaxes/fjsx15/function/parameters.sublime-syntax

  support-parameters:
    - include: Packages/Naomi/syntaxes/fjsx15/class/method/parameters.sublime-syntax

  body:
    - include: Packages/Naomi/syntaxes/fjsx15/function/body.sublime-syntax

  optional-body:
    - include: body
    - match: (?=\s*\S)
      pop: true

  optional-support-body:
    - include: body
    - match: (?=\s*\S)
      pop: true

  computed-identifier-end:
    - match: \s*(])
      captures:
        1: punctuation.definition.function.identifier.end.js.fjsx15
      pop: true

  comment-no-pop:
    - include: Packages/Naomi/syntaxes/fjsx15/comment.no-pop.sublime-syntax

  optional-expression:
    - include: Packages/Naomi/syntaxes/fjsx15/optional-expression.sublime-syntax

%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  literalDecimal: |
    [0-9][0-9_]*

  literalFloat: |
    (?> [0-9]*[.]{{literalDecimal}}
      | {{literalDecimal}}[.][0-9]*
    )

  scientificNotation: |
    (
      (?> {{literalFloat}}
        | {{literalDecimal}}
      )
      [e][+-]?
      {{literalDecimal}}
    )

contexts:
  main:
    - include: float
    - include: integer

  float:
    - match: (?xi)\s*({{scientificNotation}})
      captures:
        1: constant.numeric.float.scientific.js.fjsx15
      set: optional-property-access-or-operator
    - match: (?x)\s*({{literalFloat}})
      captures:
        1: constant.numeric.float.js.fjsx15
      set: optional-property-access-or-operator

  integer:
    - match: \s*(0[bB][01_]+)
      captures:
        1: constant.numeric.binary.js.fjsx15
      set: optional-property-access-or-operator
    - match: \s*(0[oO][0-7]+)
      captures:
        1: constant.numeric.octal.js.fjsx15
      set: optional-property-access-or-operator
    - match: (?i)\s*(0[xX][0-9a-f_]+)
      captures:
        1: constant.numeric.hex.js.fjsx15
      set: optional-property-access-or-operator
    - match: \s*([1-9][0-9_]*|0)
      captures:
        1: constant.numeric.decimal.js.fjsx15
      set: optional-property-access-or-operator

  optional-property-access-or-operator:
    - include: Packages/Naomi/syntaxes/fjsx15/comment.no-pop.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/property-access.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/operator.sublime-syntax
    - match: (?=\S)
      pop: true

%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

  constantIdentifier: |
    [$_[:upper:]]
    [$_[:upper:][:digit:]]*

contexts:
  main:
    # # Computed property name.
    # - match: \s*(\[)
    #   captures:
    #     1: punctuation.definition.object.computed-property.begin.js.fjsx15
    #   push: [
    #     associated-value,
    #     computed-property
    #   ]
    # # Other property formats.
    # - include: string
    # - include: constant
    - include: variable

  computed-property:
    - match: \s*(\])
      captures:
        1: punctuation.definition.object.computed-property.end.js.fjsx15
      pop: true
    - include: expression

  string:
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/double-quoted.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/single-quoted.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/template.sublime-syntax

  constant:
    # Single character.
    - match: |
        (?x)\s*
        ([_[:upper:]])\b
      captures:
        1: >-
          object.property.js.fjsx15
          entity.name.constant.js.fjsx15
      push: associated-value
    # Two or more characters.
    - match: |
        (?x)\s*
        (
          {{constantIdentifier}}
          (?> \$\B
            | [_[:upper:]]\b
          )
        )
      captures:
        1: >-
          object.property.js.fjsx15
          entity.name.constant.js.fjsx15
      push: associated-value

  variable:
    # Single character.
    # - match: |
    #     (?xi)\s*
    #     ((?> \$\B
    #       | [_[:alpha:]]\b
    #     ))
    #   captures:
    #     1: >-
    #       object.property.js.fjsx15
    #       entity.name.variable.js.fjsx15
    #   push: associated-value
    # Two or more characters.
    - match: |
        (?xi)\s*
        (
          {{commonIdentifier}}
          (?> \$\B
            | [_[:alnum:]]\b
          )
        )
      captures:
        1: >-
          object.property.js.fjsx15
          entity.name.variable.js.fjsx15
      push: associated-value

  expression:
    - include: Packages/Naomi/syntaxes/fjsx15/expression.sublime-syntax

  associated-value:
    - match: \s*(:)
      scope: >-
        object.js.fjsx15
        keyword.operator.other.association.js.fjsx15
      set: expression

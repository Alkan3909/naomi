%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

variables:
  commonIdentifier: |
    [a-z\x{7f}-\x{ff}_]
    [a-z\x{7f}-\x{ff}0-9_]*

  functionNamespacePath: |
    (?>
      (?:
        ((?>\\|\b))
        ({{commonIdentifier}})
        (\\)
        ({{commonIdentifier}})
        (?=\\{{commonIdentifier}}\s*\()
      )
      |
      (?:
        ((?>\\|\b))
        ({{commonIdentifier}})
        (?=\\{{commonIdentifier}}\s*\()
      )
    )

scope: ...

contexts:
  main:
    - include: array-support-function
    - include: class-object-support-function
    - include: language-construct
    - include: function-call
    - include: namespaced-function-call

  array-support-function:
    - match: |
        (?x)
        ((?>\\|\b))
        (
          (?> array
              (?> _change_key_case
                | _chunk
                | _column
                | _combine
                | _count_values
                | _diff
                  (?> _assoc
                    | _key
                    | _uassoc
                    | _ukey
                  )?
                | _fill(?:_keys)?
                | _filter
                | _flip
                | _intersect
                  (?> _assoc
                    | _key
                    | _uassoc
                    | _ukey
                  )?
                | _key_exists
                | _keys
                | _map
                | _merge(?:_recursive)?
                | _multisort
                | _pad
                | _pop
                | _product
                | _push
                | _rand
                | _reduce
                | _replace(?:_recursive)?
                | _reverse
                | _search
                | _shift
                | _slice
                | _splice
                | _sum
                  (?> _assoc
                    | _uassoc
                  )?
                | _udiff
                  (?> _assoc
                    | _uassoc
                  )?
                | _uintersect
                  (?> _assoc
                    | _uassoc
                  )?
                | _unique
                | _unshift
                | _values
                | _walk_recursive
                | _walk
              )?
            | arsort
            | asort
            | compact
            | count
            | current
            | each
            | end
            | extract
            | in_array
            | key(?:_exists)?
            | krsort
            | ksort
            | list
            | natcasesort
            | natsort
            | next
            | pos
            | prev
            | range
            | reset
            | rsort
            | shuffle
            | sizeof
            | sort
            | uasort
            | uksort
            | usort
          )
        )
        (?=\s*\()
      captures:
        0: support.function.call.php
        1: punctuation.delimiter.structure.function.php
        2: entity.name.structure.function.php
      pop: true

  class-object-support-function:
    - match: |
        (?x)
        ((?>\\|\b))
        (
          (?>
            # class_alias
            # class_exists
            class_
            (?> alias
              | exists
            )
            # get_called_class
            # get_class_methods
            # get_class_vars
            # get_class
            # get_declared_classes
            # get_declared_interfaces
            # get_declared_traits
            # get_object_vars
            # get_parent_class
            | get_
              (?> called_class
                | class
                  (?> _methods
                    | _vars
                  )?
                | declared_
                  (?> classes
                    | interfaces
                    | traits
                  )
                | object_vars
                | parent_class
              )
            | interface_exists
            # is_a
            # is_subclass_of
            | is_
              (?> a
                | subclass_of
              )
            | method_exists
            | property_exists
            | trait_exists
          )
        )
        (?=\s*\()
      captures:
        0: support.function.call.php
        1: punctuation.delimiter.structure.function.php
        2: entity.name.structure.function.php

  language-construct:
    - match: |
        (?x)
        ((?>\\|\b))
        \b
        (
          (?> declare
            | echo
            | include_once
            | include
            | isset
            | require_once
            | require
          )
        )\b
      captures:
        0: support.function.call.php
        1: punctuation.delimiter.structure.function.php
        2: entity.name.structure.function.php

  function-call:
    - match: |
        (?xi)
        ((?>\\|\b))
        ({{commonIdentifier}})
        (?=\s*\()
      captures:
        0: function.call.php
        1: punctuation.delimiter.structure.function.php
        2: entity.name.structure.function.php

  namespaced-function-call:
    - match: |
        (?xi)
        ({{functionNamespacePath}})
        (\\)?
        ({{commonIdentifier}})
        (?=\s*\()
      captures:
        0: function.call.php
        1: namespace.path.php
        2: punctuation.delimiter.structure.namespace.a.php
        3: entity.name.structure.namespace.a.php
        4: punctuation.delimiter.structure.namespace.b.php
        5: entity.name.structure.namespace.b.php
        6: punctuation.delimiter.structure.namespace.a.php
        7: entity.name.structure.namespace.a.php
        8: punctuation.delimiter.structure.function.php
        9: entity.name.structure.function.php

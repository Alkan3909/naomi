%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  elementIdentifier: |
    [$_[:alpha:]]
    [$_.:[:alnum:]]*

  attributeIdentifier: |
    [_[:alpha:]]
    [._\-[:alnum:]]*

contexts:
  main:
    # html, head, body.
    - match: |
        (?x)
        \s*(<)
        \s*(body|head|html)\b
      captures:
        1: punctuation.definition.tag.begin.html.jsx.jsx1
        2: entity.name.tag.structure.html.jsx.jsx1
      set: [
        meta-scope-structure,
        closing-tag,
        open-tag,
        optional-attribute
      ]
    # a.
    - match: |
        (?x)
        \s*(<)
        \s*(a)\b
      captures:
        1: punctuation.definition.tag.begin.html.jsx.jsx1
        2: entity.name.tag.a.html.jsx.jsx1
      set: [
        meta-scope-a,
        closing-tag,
        open-tag,
        optional-attribute
      ]
    # div.
    - match: |
        (?x)
        \s*(<)
        \s*(div)\b
      captures:
        1: punctuation.definition.tag.begin.html.jsx.jsx1
        2: entity.name.tag.block.any.html.jsx.jsx1
      set: [
        meta-scope-block-any,
        closing-tag,
        open-tag,
        optional-attribute
      ]
    # span.
    - match: |
        (?x)
        \s*(<)
        \s*(span)\b
      captures:
        1: punctuation.definition.tag.begin.html.jsx.jsx1
        2: entity.name.tag.inline.any.html.jsx.jsx1
      set: [
        meta-scope-inline-any,
        closing-tag,
        open-tag,
        optional-attribute
      ]
    # Other tags.
    - match: |
        (?x)
        \s*(<)
        \s*({{elementIdentifier}})
      captures:
        1: punctuation.definition.tag.begin.html.jsx.jsx1
        2: entity.name.tag.html.jsx.jsx1
      set: [
        meta-scope-other,
        closing-tag,
        open-tag,
        optional-attribute
      ]

  meta-scope-structure:
    - meta_scope: meta.tag.structure.html.jsx.jsx1
    - match: ""
      pop: true

  meta-scope-a:
    - meta_scope: meta.tag.inline.a.html.jsx.jsx1
    - match: ""
      pop: true

  meta-scope-block-any:
    - meta_scope: meta.tag.block.any.html.jsx.jsx1
    - match: ""
      pop: true

  meta-scope-inline-any:
    - meta_scope: meta.tag.inline.any.html.jsx.jsx1
    - match: ""
      pop: true

  meta-scope-other:
    - meta_scope: meta.tag.other.html.jsx.jsx1
    - match: ""
      pop: true

  attribute:
    - include: Packages/Naomi/syntaxes/jsx1/attribute.sublime-syntax

  optional-attribute:
    - include: attribute
    - match: (?=\s*\S)
      pop: true

  open-tag:
    - include: Packages/Naomi/syntaxes/jsx1/component.sublime-syntax#open-tag

  optional-content:
    # Closing tag.
    - match: (?=\s*</)
      pop: true
    # Content.
    - match: (?=\s*\S)
      push:
        - clear_scopes: true
        - meta_scope: text.html.basic.jsx.jsx1
        - include: Packages/Naomi/syntaxes/jsx1/component.sublime-syntax
        - include: main
        - include: Packages/Naomi/syntaxes/jsx1/fragment.sublime-syntax
        # Simple text.
        - match: .
          pop: true

  closing-tag:
    # Self closing tag.
    - match: \s*(/>)
      captures:
        1: punctuation.definition.tag.end.html.jsx.jsx1
      pop: true
    # Closing tag.
    - match: |
        (?x)\s*
        ((</)(\2)(>))
      captures:
        1: meta.tag.close.html.jsx.jsx1
        2: punctuation.definition.tag.begin.html.jsx.jsx1
        3: entity.name.tag.html.jsx.jsx1
        4: punctuation.definition.tag.end.html.jsx.jsx1
      pop: true

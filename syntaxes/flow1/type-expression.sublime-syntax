%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  expressionGroupBegin: \s*(\()
  expressionBegin: (?=\s*\S)

contexts:
  main:
    - include: comment-no-pop
    # Functions need to be detected before expression groups.
    - include: Packages/Naomi/syntaxes/flow1/function.sublime-syntax
    # Detect operators as soon as possible.
    - include: Packages/Naomi/syntaxes/flow1/operator.sublime-syntax
    # Open new type expression group.
    - match: "{{expressionGroupBegin}}"
      captures:
        1: punctuation.section.group.begin.flow
      set: open-group
    # Start of the type expression.
    - match: "{{expressionBegin}}"
      set: [ optional-tail, head ]

  comment-no-pop:
    - include: Packages/Naomi/syntaxes/fjsx15/comment.no-pop.sublime-syntax

  optional-type-expression:
    - include: Packages/Naomi/syntaxes/flow1/optional-type-expression.sublime-syntax

  open-group:
    - include: comment-no-pop
    # Functions need to be detected before expression groups.
    - include: Packages/Naomi/syntaxes/flow1/function.no-pop.sublime-syntax
    # Open new type expression group.
    - match: "{{expressionGroupBegin}}"
      captures:
        1: punctuation.section.group.begin.flow
      push: open-group
    # Close the current type expression group.
    - include: close-group
    # Start of the type expression.
    - match: "{{expressionBegin}}"
      push: optional-type-expression

  close-group:
    - match: \s*(\))
      captures:
        1: punctuation.section.group.end.flow
      set: optional-tail

  head:
    - include: comment-no-pop
    - include: Packages/Naomi/syntaxes/flow1/function.sublime-syntax
    - include: Packages/Naomi/syntaxes/flow1/object.sublime-syntax
    - include: Packages/Naomi/syntaxes/flow1/tuple.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/number.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/double-quoted.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/single-quoted.sublime-syntax
    - include: Packages/Naomi/syntaxes/fjsx15/literal/string/template.sublime-syntax
    - include: Packages/Naomi/syntaxes/flow1/simple.sublime-syntax

  optional-tail:
    - include: comment-no-pop
    # Array shorthand or generic arguments.
    - match: (?=\s*[\[<])
      set: [ optional-tail, tail ]
    # Other operators.
    - include: Packages/Naomi/syntaxes/flow1/operator.sublime-syntax
    # Anything else not expected.
    - match: (?=\s*\S)
      pop: true

  tail:
    - include: comment-no-pop
    - include: Packages/Naomi/syntaxes/flow1/operator/array-shorthand.sublime-syntax
    - include: Packages/Naomi/syntaxes/flow1/generic/arguments.sublime-syntax

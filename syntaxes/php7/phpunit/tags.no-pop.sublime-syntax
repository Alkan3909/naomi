%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [a-z\x{7f}-\x{ff}_]
    [a-z\x{7f}-\x{ff}0-9_]*

contexts:
  main:
    - include: covers
    - include: dataProvider
    - include: depends
    - include: expectedExceptionCode
    - include: expectedExceptionMessage
    - include: simple-tags
    - include: boolean-tags
    - include: string-tags
    - include: type-tags

  scope-operator:
    - match: "::"
      scope: keyword.operator.scope.resolution.php.7
      pop: true

  constant:
    - include: Packages/Naomi/syntaxes/php7/constant/normal.sublime-syntax

  number:
    - include: Packages/Naomi/syntaxes/php7/literal/number.sublime-syntax

  type:
    - include: Packages/Naomi/syntaxes/php7/type.sublime-syntax

  function:
    - match: (?xi){{commonIdentifier}}
      scope: entity.name.statement.function.php.7
      pop: true

  covers:
    - match: |
        (?x)\B(@)covers\b
      captures:
        0: keyword.documentation.php.7
        1: punctuation.keyword.begin.php.7
      push: [
        function,
        scope-operator,
        type
      ]

  dataProvider:
    - match: |
        (?x)\B(@)dataProvider\b
      captures:
        0: keyword.documentation.php.7
        1: punctuation.keyword.begin.php.7
      push: function

  depends:
    - match: |
        (?x)\B(@)depends\b
      captures:
        0: keyword.documentation.php.7
        1: punctuation.keyword.begin.php.7
      push: function

  expectedExceptionCode:
    - match: |
        (?x)\B(@)expectedExceptionCode\b
      captures:
        0: keyword.documentation.php.7
        1: punctuation.keyword.begin.php.7
      push: number

  expectedExceptionMessage:
    - match: |
        (?x)\B(@)expectedExceptionMessage\b
      captures:
        0: keyword.documentation.php.7
        1: punctuation.keyword.begin.php.7
      push:
        - match: (?=\s+[^ ]+\s*$)
          set: [
            constant,
            scope-operator,
            type
          ]
        - match: .+$
          scope: string.php.7
          pop: true

  simple-tags:
    - match: |
        (?x)\B(@)
        (?> after(?:Class)?
          | before(?:Class)?
          | coversNothing
          | codeCoverage
            (?>Ignore
              (?>Start|End)?
            )
          | large
          | medium
          | requires
          | run
            (?>TestsInSeparateProcesses|InSeparateProcess)
          | small
          | test(?:dox)?
          | ticket
        )\b
      captures:
        0: keyword.documentation.php.7
        1: punctuation.keyword.begin.php.7

  boolean-tags:
    - match: |
        (?x)\B(@)
        (?> backup
            (?>Globals|StaticAttributes)
          | backupGlobals
          | preserveGlobalState
        )\b
      captures:
        0: keyword.documentation.php.7
        1: punctuation.keyword.begin.php.7
      push:
        - match: |
            (?x)
            (?> enabled
              | disabled
            )
          scope: keyword.documentation.php.7
          pop: true

  string-tags:
    - match: |
        (?x)\B(@)
        (?> expectedExceptionMessageRegExp
          | group
        )\b
      captures:
        0: keyword.documentation.php.7
        1: punctuation.keyword.begin.php.7
      push:
        - match: .+$
          scope: string.php.7
          pop: true

  type-tags:
    - match: |
        (?x)\B(@)
        (?> coversDefaultClass
          | expectedException
          | uses
        )\b
      captures:
        0: keyword.documentation.php.7
        1: punctuation.keyword.begin.php.7
      push: type

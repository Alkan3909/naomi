%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

variables:
  commonIdentifier: |
    [_[:alpha:]]
    [_[:alnum:]]*

scope: ...

contexts:
  main:
    - match: |
        (?xi)
        (?=
          \b
          (?:
            (?> private
              | protected
              | public
            )\s+
          )?
          (?:static\s+)?
          function\b
        )
      set: [
        body,
        optional-imported-variables-and-return-type-hint,
        parameters,
        keyword
      ]

  keyword:
    - match: (?i)\bfunction(?!\\)\b
      scope: keyword.function.php.php7
      pop: true
    - include: Packages/Naomi/syntaxes/php7/modifier.no-pop.sublime-syntax

  parameters:
    - include: Packages/Naomi/syntaxes/php7/function/parameters.sublime-syntax

  optional-imported-variables-and-return-type-hint:
    - match: (?=:|{)
      pop: true
    - include: Packages/Naomi/syntaxes/php7/function/return-type-hint.sublime-syntax
    - match: use
      scope: keyword.import.variable.php.php7
      set: imported-variables-begin

  imported-variables-begin:
    - match: \(
      scope: punctuation.delimiter.imported.variables.begin.php.php7
      set: imported-variables

  imported-variables:
    - meta_scope: function.imported.variables.php.php7
    - meta_content_scope: function.imported.variables.content.php.php7
    - match: \)
      scope: punctuation.delimiter.imported.variables.end.php.php7
      pop: true
    # Starts with a variable.
    - match: (?=\$)
      push: [
        target-delimiter,
        target-variable,
      ]
    # Starts with a reference operator.
    - match: (?=&)
      push: [
        target-delimiter,
        target-variable,
        reference-operator
      ]

  reference-operator:
    - include: Packages/Naomi/syntaxes/php7/comment.no-pop.sublime-syntax
    - match: (?=\$)
      pop: true
    - match: \&
      scope: keyword.operator.other.reference.php.php7
      pop: true

  target-delimiter:
    - include: Packages/Naomi/syntaxes/php7/comment.no-pop.sublime-syntax
    - match: (?=\))
      pop: true
    - match: ","
      scope: punctuation.delimiter.function.parameters.php.php7
      pop: true

  target-variable:
    - include: Packages/Naomi/syntaxes/php7/comment.no-pop.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/variable.sublime-syntax

  body:
    - meta_scope: function.php.php7
    - include: Packages/Naomi/syntaxes/php7/function/body.sublime-syntax

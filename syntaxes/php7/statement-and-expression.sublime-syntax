%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [$_[:alpha:]]
    [$_[:alnum:]]*

  expressionGroupBegin: |
    \s*(\()

contexts:
  main:
    # - include: arrow-function
    # - include: cast-operator
    # Open new expression group.
    - match: |
        (?xi)
        {{expressionGroupBegin}}
      captures:
        1: punctuation.delimiter.expression.group.a.begin.php.php7
      set: open-b-close-a
    # Expression contents.
    - include: sequence

  open-a-close-b:
    # - include: arrow-function
    # - include: cast-operator
    # Open new expression group.
    - match: |
        (?xi)
        {{expressionGroupBegin}}
      captures:
        1: punctuation.delimiter.expression.group.a.begin.php.php7
      push: open-b-close-a
    # Close current expression group.
    - match: \s*(\))
      captures:
        1: punctuation.delimiter.expression.group.b.end.php.php7
      pop: true
    # Expression contents.
    - match: ""
      push:
        - include: sequence
        - match: ""
          pop: true

  open-b-close-a:
    # - include: arrow-function
    # - include: cast-operator
    # Open new expression group.
    - match: |
        (?xi)
        {{expressionGroupBegin}}
      captures:
        1: punctuation.delimiter.expression.group.b.begin.php.php7
      push: open-a-close-b
    # Close current expression group.
    - match: \s*(\))
      captures:
        1: punctuation.delimiter.expression.group.a.end.php.php7
      pop: true
    # Expression contents.
    - match: ""
      push:
        - include: sequence
        - match: ""
          pop: true

  # cast-operator:
  #   - match: |
  #       (?xi)
  #       (?=
  #         \s*\(
  #         {{commonIdentifier}}
  #         \s*:
  #       )
  #     push:
  #       - include: Packages/Naomi/syntaxes/php7/flowtype/cast.sublime-syntax

  # arrow-function:
  #   - include: Packages/Naomi/syntaxes/php7/arrow-function.sublime-syntax

  sequence:
    - include: Packages/Naomi/syntaxes/php7/terminator.sublime-syntax
    # Comments.
    # - include: Packages/Naomi/syntaxes/php7/flowtype/prolog.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/prolog.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/comment.sublime-syntax
    # Simple statements.
    # - include: Packages/Naomi/syntaxes/php7/statement/label.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/statement/hanging.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/statement/bodied.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/statement/simple.sublime-syntax
    # Complex statements.
    # - include: Packages/Naomi/syntaxes/php7/flowtype/interface.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/flowtype/type-aliasing.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/flowtype/declare.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/export.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/import.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/class.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/decorator.sublime-syntax
    # Expression keywords.
    # - include: Packages/Naomi/syntaxes/php7/instanceof.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/new.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/other-keywords.sublime-syntax
    # Expression.
    # - include: Packages/Naomi/syntaxes/php7/array-access.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/literal.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/function.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/global.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/reactjs.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/function-call.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/destructuring.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/jsx1.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/operator.sublime-syntax
    # - include: Packages/Naomi/syntaxes/php7/type.sublime-syntax
    # When it comes to constants and variables, there's no way to tell apart
    # without an intellisense, so it’ll treat that anything that looks a
    # uppercase variable as if it was a constant.
    - include: Packages/Naomi/syntaxes/php7/constant.sublime-syntax
    # Constant matching failed, so it could be a variable.
    - include: Packages/Naomi/syntaxes/php7/variable.sublime-syntax

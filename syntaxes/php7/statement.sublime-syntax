%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

contexts:
  main:
    - match: (?=\s*\})
      pop: true
    - include: Packages/Naomi/syntaxes/php7/comment.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/declare.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/namespace.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/use.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/trait.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/interface.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/class.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/function.sublime-syntax
    - include: Packages/Naomi/syntaxes/php7/member-variable.sublime-syntax
    - include: hanging-statement
    - include: bodied-statement
    - include: simple-statement
    - include: other-statements

  simple-statement:
    - match: |
        (?xi)\b
        (?> break
          | const
          | continue
          | default
          | goto
          | return
          | throw
          | yield(\s+from)?
        )\b
      scope: keyword.control.simple.php.7
      set: simple-expression

  other-statements:
    - match: |
        (?xi)\b
        (?> clone
          | die
          | e(?>cho|val|xit)
          | include(?:_once)?
          | require(?:_once)?
        )\b
      scope: keyword.other.php.7
      set: multi-expression

  simple-expression:
    - include: Packages/Naomi/syntaxes/php7/expression.sublime-syntax

  multi-expression:
    - match: ;
      scope: punctuation.terminator.php.7
      pop: true
    - match: \,
      scope: punctuation.delimiter.expression.php.7
    - match: (?=\S)
      push:
        - match: (?=\s*;)
          pop: true
        - include: Packages/Naomi/syntaxes/php7/expression.sublime-syntax

  hanging-statement:
    - match: |
        (?xi)\b
        (?> case
          | default
        )\b
      scope: keyword.control.hanging.php.7
      pop: true

  bodied-statement:
    - match: |
        (?xi)\b
        (?> if
          | else(?:if)?
          | for(?:each)?
          | do
          | while
          | try
          | catch
          | finally
          | switch
        )\b
      scope: keyword.control.php.7
      push: [
        body,
        expression
      ]

  body:
    - match: \{
      scope: punctuation.delimiter.control.body.begin.php.7
      set: body-content

  body-content:
    - match: \}
      scope: punctuation.delimiter.control.body.end.php.7
      pop: true
    - match: (?=\S)
      push:
        - include: Packages/Naomi/syntaxes/php7/statement.sublime-syntax
        - include: Packages/Naomi/syntaxes/php7/expression.sublime-syntax

  expression:
    - meta_scope: statement.control.php.7
    - include: Packages/Naomi/syntaxes/php7/expression.sublime-syntax

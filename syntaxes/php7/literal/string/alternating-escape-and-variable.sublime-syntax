%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  commonIdentifier: |
    [a-z\x{7f}-\x{ff}_]
    [a-z\x{7f}-\x{ff}0-9_]*

  simpleEmbeddedVariable: |
    (\$)({{commonIdentifier}})
    (?:
      (\[)([^\]]*)(\])
    )*

  octalEscapedChar: |
    \\[0-7]{1,3}

  hexEscapedChar: |
    \\x[a-f0-9]{1,2}

  unicodeEscapedChar: |
    \\u\{[a-f0-9]+\}

  doubleQuotedEscapeSequences: |
    (?> \\\\
      | \\"
      | \\n
      | \\r
      | \\t
      | \\v
      | \\e
      | \\f
      | \\\$
      | {{octalEscapedChar}}
      | {{hexEscapedChar}}
      | {{unicodeEscapedChar}}
    )

contexts:
  main:
    - include: escape-a-variable-a

  escape-a-variable-a:
    # Escape A.
    - match: (?x){{doubleQuotedEscapeSequences}}
      scope: constant.character.escape.a.php.7
      set: escape-b-variable-a
    # Simple variable A.
    - match: (?xi){{simpleEmbeddedVariable}}
      captures:
        0: variable.a.php.7
        1: punctuation.variable.begin.php.7
        2: entity.name.variable.php.7
        3: operator.subscript.begin.php.7
        4: array.key.php.7
        5: operator.subscript.end.php.7
      set: escape-a-variable-b

  escape-a-variable-b:
    # Escape A.
    - match: (?x){{doubleQuotedEscapeSequences}}
      scope: constant.character.escape.a.php.7
      set: escape-b-variable-b
    # Simple variable B.
    - match: (?xi){{simpleEmbeddedVariable}}
      captures:
        0: variable.b.php.7
        1: punctuation.variable.begin.php.7
        2: entity.name.variable.php.7
        3: operator.subscript.begin.php.7
        4: array.key.php.7
        5: operator.subscript.end.php.7
      set: escape-a-variable-a

  escape-b-variable-a:
    # Escape B.
    - match: (?x){{doubleQuotedEscapeSequences}}
      scope: constant.character.escape.b.php.7
      set: escape-a-variable-a
    # Simple variable A.
    - match: (?xi){{simpleEmbeddedVariable}}
      captures:
        0: variable.a.php.7
        1: punctuation.variable.begin.php.7
        2: entity.name.variable.php.7
        3: operator.subscript.begin.php.7
        4: array.key.php.7
        5: operator.subscript.end.php.7
      set: escape-b-variable-b

  escape-b-variable-b:
    # Escape B.
    - match: (?x){{doubleQuotedEscapeSequences}}
      scope: constant.character.escape.b.php.7
      set: escape-a-variable-b
    # Simple variable B.
    - match: (?xi){{simpleEmbeddedVariable}}
      captures:
        0: variable.b.php.7
        1: punctuation.variable.begin.php.7
        2: entity.name.variable.php.7
        3: operator.subscript.begin.php.7
        4: array.key.php.7
        5: operator.subscript.end.php.7
      set: escape-b-variable-a

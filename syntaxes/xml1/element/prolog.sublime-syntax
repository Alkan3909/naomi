%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

contexts:
  main:
    - match: (<\?)(xml)
      captures:
        0: instruction.prolog.xml.xml1
        1: punctuation.delimiter.instruction.begin.xml.xml1
        2: entity.name.instruction.xml.xml1
      set: version

  terminator:
    - match: \s*\?>
      scope: >-
        instruction.prolog.xml.xml1
        punctuation.delimiter.instruction.end.xml.xml1
      pop: true

  assignment-operator:
    - match: \s*(=)
      captures:
        1: keyword.operator.other.assignment.xml.xml1
      pop: true

  version:
    - include: terminator
    - match: version
      scope: >-
        support.attribute.xml.xml1
        entity.name.attribute.xml.xml1
      set: [
        optional-attributes,
        version-value,
        assignment-operator
      ]

  version-value:
    - match: (\")1.[0-9]+(\")
      captures:
        0: string.quoted.double.xml.xml1
        1: punctuation.delimiter.string.begin.xml.xml1
        2: punctuation.delimiter.string.end.xml.xml1
      pop: true
    - match: (\')1.[0-9]+(\')
      captures:
        0: string.quoted.single.xml.xml1
        1: punctuation.delimiter.string.begin.xml.xml1
        2: punctuation.delimiter.string.end.xml.xml1
      pop: true

  optional-attributes:
    - include: encoding
    - include: standalone

  encoding:
    - include: terminator
    - match: encoding
      scope: >-
        support.attribute.xml.xml1
        entity.name.attribute.xml.xml1
      set: [
        standalone,
        encoding-value,
        assignment-operator
      ]

  encoding-value:
    - match: |
        (?xi)
        (\")[a-z][a-z0-9-._]+(\")
      captures:
        0: string.quoted.double.xml.xml1
        1: punctuation.delimiter.string.begin.xml.xml1
        2: punctuation.delimiter.string.end.xml.xml1
      pop: true
    - match: |
        (?xi)
        (\')[a-z][a-z0-9-._]+(\')
      captures:
        0: string.quoted.single.xml.xml1
        1: punctuation.delimiter.string.begin.xml.xml1
        2: punctuation.delimiter.string.end.xml.xml1
      pop: true

  standalone:
    - include: terminator
    - match: standalone
      scope: >-
        support.attribute.xml.xml1
        entity.name.attribute.xml.xml1
      set: [
        terminator,
        standalone-value,
        assignment-operator
      ]

  standalone-value:
    - include: terminator
    - match: |
        (?xi)
        (\")(?>yes|no)(\")
      captures:
        0: string.quoted.double.xml.xml1
        1: punctuation.delimiter.string.begin.xml.xml1
        2: punctuation.delimiter.string.end.xml.xml1
      pop: true
    - match: |
        (?xi)
        (\')(?>yes|no)(\')
      captures:
        0: string.quoted.single.xml.xml1
        1: punctuation.delimiter.string.begin.xml.xml1
        2: punctuation.delimiter.string.end.xml.xml1
      pop: true

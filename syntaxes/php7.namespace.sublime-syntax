%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

variables:
  commonIdentifier: |
    [a-z\x{7f}-\x{ff}_]
    [a-z\x{7f}-\x{ff}0-9_]*

  namespacePath: |
    (?>
      (?:
        ((?>\\|\b))
        ({{commonIdentifier}})
        (\\)
        ({{commonIdentifier}})
      )
      |
      (?:
        ((?>\\|\b))
        ({{commonIdentifier}})
      )
    )

scope: ...

contexts:
  main:
    - match: (?xi)\bnamespace(?!\\)\b
      scope: keyword.structure.namespace.php
      set: declaration

  declaration:
    - meta_scope: namespace.php
    - include: php7.comments.no-pop.sublime-syntax
    # Implicit body.
    - match: ";"
      scope: >-
        namespace.body.php
        punctuation.delimiter.structure.namespace.body.begin.php
      set: implicit-body
    # Bracketed body.
    - match: "{"
      scope: >-
        namespace.body.php
        punctuation.delimiter.structure.namespace.body.begin.php
      set: bracketed-body
    # namespace's path.
    - match: "(?xi){{namespacePath}}"
      captures:
        0: namespace.path.php
        1: punctuation.delimiter.structure.namespace.a.php
        2: entity.name.structure.namespace.a.php
        3: punctuation.delimiter.structure.namespace.b.php
        4: entity.name.structure.namespace.b.php
        5: punctuation.delimiter.structure.namespace.a.php
        6: entity.name.structure.namespace.a.php

  implicit-body:
    - meta_content_scope: >-
        namespace.php
        namespace.body.php
        namespace.body.content.php
    - include: php7.comments.no-pop.sublime-syntax
    - match: (?=\bnamespace\b)
      pop: true
    - include: implicity-body-expected-structures

  implicity-body-expected-structures:
    - match: ""
      push:
        - match: (?=\bnamespace\b)
          pop: true
        - include: expected-structures
        - match: ""
          pop: true

  bracketed-body:
    - meta_content_scope: >-
        namespace.php
        namespace.body.php
        namespace.body.content.php
    - include: php7.comments.no-pop.sublime-syntax
    - match: "}"
      scope: >-
        namespace.php
        namespace.body.php
        punctuation.delimiter.structure.namespace.body.end.php
      pop: true
    - include: bracketed-body-expected-structures

  bracketed-body-expected-structures:
    - match: ""
      push:
        - include: expected-structures
        - match: ""
          pop: true

  expected-structures:
    - include: php7.comments.sublime-syntax
    - include: php7.operator.sublime-syntax
    - include: php7.constant.sublime-syntax
    - include: php7.namespace.sublime-syntax
    - include: php7.use.sublime-syntax
    - include: php7.modifier.sublime-syntax
    - include: php7.keyword.sublime-syntax
    - include: php7.trait.sublime-syntax
    - include: php7.interface.sublime-syntax
    - include: php7.class.sublime-syntax
    - include: php7.function.sublime-syntax
    - include: php7.new-object.sublime-syntax
    - include: php7.function-call.sublime-syntax
    - include: php7.variable.sublime-syntax
    - include: php7.type.sublime-syntax

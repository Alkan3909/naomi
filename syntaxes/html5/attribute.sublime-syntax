%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true

scope: ...

variables:
  attributeIdentifier: |
    [_:[:alpha:]]
    [_:[:alnum:]\-.]*

contexts:
  main:
    # Style:
    - match: style\b
      scope: >-
        meta.attribute.builtin.html.html5
        entity.other.attribute-name.style.html.html5
      set: [ meta, style-begin, key-value-separator ]
    # Event handler.
    - match: |
        (?xi)on
        # onabort
        (?> abort
          # onafterprint
          | afterprint
          # onauxclick
          | auxclick
          # onbeforeprint, onbeforeunload
          | before(?>print|unload)
          # onblur
          | blur
          # oncancel
          | cancel
          # oncanplay, oncanplaythrough
          | canplay(?:through)?
          # onchange
          | change
          # onclick
          | click
          # onclose
          | close
          # oncopy
          | copy
          # oncuechange
          | cuechange
          # oncut
          | cut
          # ondblclick
          | dblclick
          # ondrag, ondragend ondragenter ondragexit ondragleave ondragover ondragstart
          | drag(?>end|enter|exit|leave|over|start)?
          # ondrop
          | drop
          # ondurationchange
          | durationchange
          # onemptied
          | emptied
          # onended
          | ended
          # onerror
          | error
          # onfocus
          | focus
          # onhashchange
          | hashchange
          # oninput
          | input
          # oninvalid
          | invalid
          # onkeydown, onkeypress, onkeyup
          | key(?>down|press|up)
          # onlanguagechange
          | languagechange
          # onload, onloadeddata, onloadedmetadata, onloadend, onloadstart
          | load(?>ed(?>data|metadata)|end|start)
          # onmessage
          | message
          # onmousedown, onmouseenter, onmouseleave, onmousemove, onmouseout, onmouseover, onmouseup
          | mouse(?>down|enter|leave|move|out|over|up)
          # onoffline
          | offline
          # ononline
          | online
          # onpagehide, onpageshow
          | page(?>hide|show)
          # onpaste
          | paste
          # onpause
          | pause
          # onplay, onplaying
          | play(?:ing)?
          # onpopstate
          | popstate
          # onprogress
          | progress
          # onratechange
          | ratechange
          # onreadystatechange
          | readystatechange
          # onrejectionhandled
          | rejectionhandled
          # onreset
          | reset
          # onresize
          | resize
          # onscroll
          | scroll
          # onseeked, onseeking
          | seek(?>ed|ing)
          # onselect
          | select
          # onshow
          | show
          # onstalled
          | stalled
          # onstorage
          | storage
          # onsubmit
          | submit
          # onsuspend
          | suspend
          # ontimeupdate
          | timeupdate
          # ontoggle
          | toggle
          # onunhandlerejection
          | unhandledrejection
          # onunload
          | unload
          # onvolumechange
          | volumechange
          # onwaiting
          | waiting
          # onwheel
          | wheel
        )\b
      scope: >-
        meta.attribute.builtin.event-handler.html.html5
        entity.other.attribute-name.html.html5
      set: [ meta, script-begin, key-value-separator ]
    # With value.
    - match: (?xi)(?={{attributeIdentifier}}\s*=)
      set: [ meta, value, name ]
    # Simple attribute.
    - match: (?xi)(?={{attributeIdentifier}})
      set: name

  close-double-quote:
    - match: \"
      scope: punctuation.definition.string.end.html.html5
      pop: true

  close-single-quote:
    - match: \'
      scope: punctuation.definition.string.end.html.html5
      pop: true

  css:
    - include: Packages/Naomi/syntaxes/css3/ruleset/block-content.sublime-syntax#main-no-pop

  key-value-separator:
    - match: \=
      scope: punctuation.separator.key-value.html.html5
      pop: true

  meta:
    - meta_scope: meta.attribute-with-value.html.html5
    - include: pop-now

  name:
    - include: Packages/Naomi/syntaxes/html5/attribute/builtin.sublime-syntax
    - include: Packages/Naomi/syntaxes/html5/attribute/data.sublime-syntax
    - include: Packages/Naomi/syntaxes/html5/attribute/other.sublime-syntax

  pop-now:
    - match: ""
      pop: true

  script:
    - include: Packages/Naomi/syntaxes/naomi.fjsx15.sublime-syntax

  script-begin:
    - match: \'
      scope: punctuation.definition.string.begin.html.html5
      set: [ script-close-single-quote ]
    - match: \"
      scope: punctuation.definition.string.begin.html.html5
      set: [ script-close-double-quote ]
    # Unquoted script.
    - match: ""
      with_prototype:
        - match: (?=[\s<>])
          pop: true
      set: [ script-meta, script ]

  script-close-double-quote:
    - include: close-double-quote
    - match: (?=\S)
      with_prototype:
        - match: (?=")
          pop: true
      push: [ script-meta, script ]

  script-close-single-quote:
    - include: close-single-quote
    - match: (?=\S)
      with_prototype:
        - match: (?=')
          pop: true
      push: [ script-meta, script ]

  script-meta:
    - clear_scopes: true
    - meta_scope: source.js
    - include: pop-now

  style-begin:
    - match: \'
      scope: punctuation.definition.string.begin.html.html5
      set: [ style-close-single-quote ]
    - match: \"
      scope: punctuation.definition.string.begin.html.html5
      set: [ style-close-double-quote ]
    # Unquoted style.
    - match: ""
      with_prototype:
        - match: (?=[\s<>])
          pop: true
      set: [ style-meta, css ]

  style-close-double-quote:
    - include: close-double-quote
    - match: (?=\S)
      with_prototype:
        - match: (?=")
          pop: true
      push: [ style-meta, css ]

  style-close-single-quote:
    - include: close-single-quote
    - match: (?=\S)
      with_prototype:
        - match: (?=')
          pop: true
      push: [ style-meta, css ]

  style-meta:
    - clear_scopes: true
    - meta_scope: source.css
    - include: pop-now

  value:
    - include: Packages/Naomi/syntaxes/html5/attribute/value.sublime-syntax
